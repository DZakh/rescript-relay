// Generated by BUCKLESCRIPT VERSION 6.0.3, PLEASE EDIT WITH CARE

import * as React from "react";
import * as BooksOverview from "./BooksOverview.bs.js";
import * as TestMutations from "./testViews/testMutations/TestMutations.bs.js";
import * as CreateBookView from "./CreateBookView.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.js";
import * as SingleBookDisplayer from "./SingleBookDisplayer.bs.js";

function Main$GoToViewButton(Props) {
  var label = Props.label;
  var target = Props.target;
  return React.createElement("button", {
              onClick: (function (param) {
                  return ReasonReactRouter.push(target);
                })
            }, label);
}

var GoToViewButton = /* module */[/* make */Main$GoToViewButton];

function Main(Props) {
  var url = ReasonReactRouter.useUrl(undefined, /* () */0);
  var match = url[/* path */0];
  var exit = 0;
  if (match) {
    switch (match[0]) {
      case "book" : 
          var match$1 = match[1];
          if (match$1 && !match$1[1]) {
            return React.createElement("div", undefined, React.createElement(SingleBookDisplayer.make, {
                            bookId: match$1[0]
                          }), React.createElement(Main$GoToViewButton, {
                            label: "To overview",
                            target: "/",
                            key: "overview"
                          }));
          } else {
            exit = 1;
          }
          break;
      case "create" : 
          return React.createElement("div", undefined, React.createElement(CreateBookView.make, { }), React.createElement(Main$GoToViewButton, {
                          label: "To overview",
                          target: "/",
                          key: "overview"
                        }));
      case "test-mutations" : 
          if (match[1]) {
            exit = 1;
          } else {
            return React.createElement("div", undefined, React.createElement(TestMutations.make, { }), React.createElement(Main$GoToViewButton, {
                            label: "To overview",
                            target: "/",
                            key: "overview"
                          }));
          }
          break;
      default:
        exit = 1;
    }
  } else {
    exit = 1;
  }
  if (exit === 1) {
    return React.createElement("div", undefined, React.createElement(BooksOverview.make, { }), React.createElement(Main$GoToViewButton, {
                    label: "Create book",
                    target: "/create",
                    key: "create"
                  }));
  }
  
}

var make = Main;

export {
  GoToViewButton ,
  make ,
  
}
/* react Not a pure module */
