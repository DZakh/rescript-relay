/** This file is autogenerated by ReasonRelay and should not be modified manually. */
/**
 * ENUMS
 * Helpers for wrapping/unwrapping enums.
 */
module Enum_TicketStatus: {
  type t = [
    | `Done
    | `Progress
    | `OnHold
    | `Rejected
    | `FUTURE_ADDED_VALUE__
  ];
  type wrapped;
  let unwrap: wrapped => t;
  let wrap: t => wrapped;
  let toString: t => string;
  let fromString: string => t;
} = {
  type t = [
    | `Done
    | `Progress
    | `OnHold
    | `Rejected
    | `FUTURE_ADDED_VALUE__
  ];
  type wrapped;

  external __unwrap: wrapped => string = "%identity";
  external __wrap: string => wrapped = "%identity";

  let unwrap = wrapped =>
    switch (wrapped |> __unwrap) {
    | "Done" => `Done
    | "Progress" => `Progress
    | "OnHold" => `OnHold
    | "Rejected" => `Rejected
    | _ => `FUTURE_ADDED_VALUE__
    };

  let wrap = t =>
    (
      switch (t) {
      | `Done => "Done"
      | `Progress => "Progress"
      | `OnHold => "OnHold"
      | `Rejected => "Rejected"
      | `FUTURE_ADDED_VALUE__ => ""
      }
    )
    |> __wrap;

  let toString = t => t |> wrap |> __unwrap;
  let fromString = str => str |> __wrap |> unwrap;
};
