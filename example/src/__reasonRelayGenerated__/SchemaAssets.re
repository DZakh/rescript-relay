/** This file is autogenerated by ReasonRelay and should not be modified manually. */
/**
 * ENUMS
 * Helpers for wrapping/unwrapping enums.
 */
module Enum_BookStatus: {
  type t = [ | `Draft | `Published | `Discontinued | `FUTURE_ADDED_VALUE__];
  type wrapped;
  let unwrap: wrapped => t;
  let wrap: t => wrapped;
} = {
  type t = [ | `Draft | `Published | `Discontinued | `FUTURE_ADDED_VALUE__];
  type wrapped;

  external __unwrap: wrapped => string = "%identity";
  external __wrap: string => wrapped = "%identity";

  let unwrap = wrapped =>
    switch (wrapped |> __unwrap) {
    | "Draft" => `Draft
    | "Published" => `Published
    | "Discontinued" => `Discontinued
    | _ => `FUTURE_ADDED_VALUE__
    };

  let wrap = t =>
    (
      switch (t) {
      | `Draft => "Draft"
      | `Published => "Published"
      | `Discontinued => "Discontinued"
      | `FUTURE_ADDED_VALUE__ => ""
      }
    )
    |> __wrap;
};

module Enum_CacheControlScope: {
  type t = [ | `PUBLIC | `PRIVATE | `FUTURE_ADDED_VALUE__];
  type wrapped;
  let unwrap: wrapped => t;
  let wrap: t => wrapped;
} = {
  type t = [ | `PUBLIC | `PRIVATE | `FUTURE_ADDED_VALUE__];
  type wrapped;

  external __unwrap: wrapped => string = "%identity";
  external __wrap: string => wrapped = "%identity";

  let unwrap = wrapped =>
    switch (wrapped |> __unwrap) {
    | "PUBLIC" => `PUBLIC
    | "PRIVATE" => `PRIVATE
    | _ => `FUTURE_ADDED_VALUE__
    };

  let wrap = t =>
    (
      switch (t) {
      | `PUBLIC => "PUBLIC"
      | `PRIVATE => "PRIVATE"
      | `FUTURE_ADDED_VALUE__ => ""
      }
    )
    |> __wrap;
};
